{"version":3,"file":"static/js/544.0d461df6.chunk.js","mappings":"iNACA,GAAgB,gBAAkB,mCAAmC,aAAe,gCAAgC,WAAa,8BAA8B,UAAY,6BAA6B,YAAc,gC,SCwCtN,EAnCkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OAEbC,EAAcC,EACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAAA,gBAAf,SACGN,EAAOO,KAAI,YAAuC,IAApCC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACvC,OACE,gBAAcN,UAAWC,EAAAA,aAAzB,UACE,SAAC,KAAD,CACEM,GAAE,kBAAaD,GACfE,MAAO,CAAEC,KAAMX,GACfE,UAAWC,EAAAA,WAHb,UAKE,gBAAID,UAAWC,EAAAA,WAAf,WACE,gBACED,UAAWC,EAAAA,UACXS,IACkB,OAAhBP,EAlBG,mCAmBgBA,EACfP,EAENe,IAAKN,KAEP,cAAGL,UAAWC,EAAAA,YAAd,SAAgCI,GAASD,UAhBrCE,EAqBb,KAGN,C,yHCFD,UAhCa,WACX,OAA4CM,EAAAA,EAAAA,UAAS,MAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACb,IAAMI,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,MAFL,UAGD,KADPC,EAFQ,yDAMdR,EAAkBQ,GANJ,gDAQdJ,EAAS,EAAD,IARM,yBAUdF,GAAa,GAVC,4EAAH,qDAafI,GACD,GAAE,KAGD,4BACGH,IAAS,0EACTF,IAAa,SAAC,IAAD,IACbF,IAAkB,SAAC,IAAD,CAAWlB,OAAQkB,MAG3C,C,kMCjCKU,EAAW,+BACXC,EAAU,mCAET,SAAeH,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBI,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBC,IAHzC,cAEGE,EAFH,yBAKIA,EAASJ,KAAKK,SALlB,gCAOHC,QAAQX,MAAM,+BAPX,gFAWA,SAAeY,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAEoBL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeC,EADf,kBACgCM,IAHpD,cAEGJ,EAFH,yBAKIA,EAASJ,KAAKK,SALlB,gCAOHC,QAAQX,MAAM,2BAPX,gFAWA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,gGAEoBP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAS,EADA,oBACoBR,IAHxC,cAEGE,EAFH,gBAKUA,EAASJ,KALnB,wEAOHM,QAAQX,MAAM,wBAAd,MAPG,gFAWA,SAAegB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,gGAEoBP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAS,EADA,4BAC4BR,IAHhD,cAEGE,EAFH,yBAKIA,EAASJ,KAAKY,MALlB,gCAOHN,QAAQX,MAAM,2BAPX,gFAWA,SAAekB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,gGAEoBP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAS,EADA,4BAC4BR,IAHhD,cAEGE,EAFH,yBAKIA,EAASJ,KAAKK,SALlB,gCAOHC,QAAQX,MAAM,8BAPX,gF","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","pages/Home/Home.jsx","services/fetchAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie_container\":\"MovieList_movie_container__e-vEF\",\"card_wrapper\":\"MovieList_card_wrapper__uegMx\",\"movie_link\":\"MovieList_movie_link__aBAcC\",\"movie_img\":\"MovieList_movie_img__nhGcc\",\"movie_title\":\"MovieList_movie_title__6L8Eg\"};","import React from 'react';\nimport noPoster from 'images/noPoster.png';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './MovieList.module.css';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies }) => {\n  const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n  const noPosterImg = noPoster;\n  const location = useLocation();\n\n  return (\n    <ul className={css.movie_container}>\n      {movies.map(({ poster_path, name, title, id }) => {\n        return (\n          <div key={id} className={css.card_wrapper}>\n            <Link\n              to={`/movies/${id}`}\n              state={{ from: location }}\n              className={css.movie_link}\n            >\n              <li className={css.movie_item}>\n                <img\n                  className={css.movie_img}\n                  src={\n                    poster_path !== null\n                      ? BASE_IMG_URL + poster_path\n                      : noPosterImg\n                  }\n                  alt={title}\n                />\n                <p className={css.movie_title}>{title || name}</p>\n              </li>\n            </Link>\n          </div>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport MovieList from 'components/MovieList/MovieList';\nimport { getTrendingMovies } from 'services/fetchAPI';\nimport Loader from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const data = await getTrendingMovies();\n        if (data === 0) {\n          return;\n        }\n        setTrendingMovies(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <main>\n      {error && <p>Something went wrong. Please, refresh the page</p>}\n      {isLoading && <Loader />}\n      {trendingMovies && <MovieList movies={trendingMovies} />}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e58952305d798b0bf4a300c9b516b346';\n\nexport async function getTrendingMovies() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('getTrendingFilms error' + error);\n  }\n}\n\nexport async function searchMovies(query) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('searchMovies error' + error);\n  }\n}\n\nexport async function getMovieDetails(movie_id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movie_id}?api_key=${API_KEY}`\n    );\n    return await response.data;\n  } catch (error) {\n    console.error('getMovieDetails error', error);\n  }\n}\n\nexport async function getMovieCast(movie_id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movie_id}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error('getMovieCast error' + error);\n  }\n}\n\nexport async function getMovieReviews(movie_id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('getMovieReviews error' + error);\n  }\n}\n"],"names":["movies","noPosterImg","noPoster","location","useLocation","className","css","map","poster_path","name","title","id","to","state","from","src","alt","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","error","setError","useEffect","fetchData","getTrendingMovies","data","BASE_URL","API_KEY","axios","response","results","console","searchMovies","query","getMovieDetails","movie_id","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}