{"version":3,"file":"static/js/597.dba6000e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/fetchAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card_container\":\"MovieCard_card_container__Zat1R\",\"card_img\":\"MovieCard_card_img__8YWvr\",\"card_description\":\"MovieCard_card_description__k7iPq\",\"card_title\":\"MovieCard_card_title__DzBeX\"};","import React from 'react';\nimport noPoster from 'images/noPoster.png';\nimport css from './MovieCard.module.css';\nimport PropTypes from 'prop-types';\n\nconst MovieCard = ({\n  movie: {\n    poster_path,\n    original_title,\n    release_date,\n    genres,\n    vote_average,\n    overview,\n  },\n}) => {\n  const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n  const noPosterImg = noPoster;\n  return (\n    <div className={css.card_container}>\n      <div>\n        <img\n          src={poster_path !== null ? BASE_IMG_URL + poster_path : noPosterImg}\n          className={css.card_img}\n          alt={original_title}\n        />\n      </div>\n      <div className={css.card_description}>\n        <h1 className={css.card_title}>\n          {original_title}\n          <span>({parseInt(release_date)})</span>\n        </h1>\n        <p>User Score: {Math.round(vote_average * 10)}%</p>\n        <h2 className={css.description_name}>Overview</h2>\n        <p className={css.description}>{overview}</p>\n        <h2 className={css.description_name}>Genres</h2>\n        <p className={css.description_name}>\n          {genres.map(genre => genre.name).join(' | ')}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieCard;\n\nMovieCard.propTypes = {\n  poster_path: PropTypes.string,\n  original_title: PropTypes.string,\n  release_date: PropTypes.string,\n  genres: PropTypes.string,\n  vote_average: PropTypes.number,\n  overview: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"go_back\":\"MovieDetails_go_back__OpTV4\",\"movie_link\":\"MovieDetails_movie_link__mfuEK\"};","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, useLocation, Link } from 'react-router-dom';\nimport { getMovieDetails } from 'services/fetchAPI';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport css from './MovieDetails.module.css';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const data = await getMovieDetails(movieId);\n        if (data === 0) {\n          return;\n        }\n        setMovie(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkHref} className={css.go_back}>\n        &larr; Go back\n      </Link>\n      {movie && (\n        <>\n          <MovieCard movie={movie} />\n          <div>\n            <h2>Additional information</h2>\n            <ul className={css.list}>\n              <Link\n                to=\"cast\"\n                state={{ from: backLinkHref }}\n                className={css.movie_link}\n              >\n                <li>Cast</li>\n              </Link>\n              <Link\n                to=\"reviews\"\n                state={{ from: backLinkHref }}\n                className={css.movie_link}\n              >\n                <li>Reviews</li>\n              </Link>\n            </ul>\n          </div>\n        </>\n      )}\n      {error && <p>Something went wrong. Please, refresh the page</p>}\n      {isLoading && <Loader />}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e58952305d798b0bf4a300c9b516b346';\n\nexport async function getTrendingMovies() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('getTrendingFilms error' + error);\n  }\n}\n\nexport async function searchMovies(query) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('searchMovies error' + error);\n  }\n}\n\nexport async function getMovieDetails(movie_id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movie_id}?api_key=${API_KEY}`\n    );\n    return await response.data;\n  } catch (error) {\n    console.error('getMovieDetails error', error);\n  }\n}\n\nexport async function getMovieCast(movie_id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movie_id}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error('getMovieCast error' + error);\n  }\n}\n\nexport async function getMovieReviews(movie_id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('getMovieReviews error' + error);\n  }\n}\n"],"names":["movie","poster_path","original_title","release_date","genres","vote_average","overview","noPosterImg","noPoster","className","css","src","alt","parseInt","Math","round","map","genre","name","join","useState","setMovie","error","setError","isLoading","setIsLoading","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","fetchData","getMovieDetails","data","to","Loader","Suspense","fallback","BASE_URL","API_KEY","getTrendingMovies","axios","response","results","console","searchMovies","query","movie_id","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}