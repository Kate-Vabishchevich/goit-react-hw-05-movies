{"version":3,"file":"static/js/600.1c6168ec.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","services/fetchAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie_container\":\"MovieList_movie_container__e-vEF\",\"card_wrapper\":\"MovieList_card_wrapper__uegMx\",\"movie_link\":\"MovieList_movie_link__aBAcC\",\"movie_img\":\"MovieList_movie_img__nhGcc\",\"movie_title\":\"MovieList_movie_title__6L8Eg\"};","import React from 'react';\nimport noPoster from 'images/noPoster.png';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './MovieList.module.css';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies }) => {\n  const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n  const noPosterImg = noPoster;\n  const location = useLocation();\n\n  return (\n    <ul className={css.movie_container}>\n      {movies.map(({ poster_path, name, title, id }) => {\n        return (\n          <div key={id} className={css.card_wrapper}>\n            <Link\n              to={`/movies/${id}`}\n              state={{ from: location }}\n              className={css.movie_link}\n            >\n              <li className={css.movie_item}>\n                <img\n                  className={css.movie_img}\n                  src={\n                    poster_path !== null\n                      ? BASE_IMG_URL + poster_path\n                      : noPosterImg\n                  }\n                  alt={title}\n                />\n                <p className={css.movie_title}>{title || name}</p>\n              </li>\n            </Link>\n          </div>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"search_form\":\"SearchForm_search_form__dWfKO\",\"search_input\":\"SearchForm_search_input__qr+4E\",\"search_button\":\"SearchForm_search_button__GSJ0K\"};","import { useState } from 'react';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport css from './SearchForm.module.css';\nimport PropTypes from 'prop-types';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [search, setSearch] = useState('');\n\n  const onInputChange = e => setSearch(e.target.value);\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    onSubmit(search.trim());\n    setSearch('');\n  };\n\n  return (\n    <form className={css.search_form} onSubmit={onSubmitForm}>\n      <input\n        className={css.search_input}\n        onChange={onInputChange}\n        value={search}\n        name=\"search\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n      />\n      <button type=\"submit\" className={css.search_button}>\n        <span className={css.button_label}></span>\n        <AiOutlineSearch size=\"24px\" />\n      </button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport MovieList from 'components/MovieList/MovieList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { searchMovies } from 'services/fetchAPI';\nimport Loader from 'components/Loader/Loader';\nimport { useSearchParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchValue = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!searchValue) {\n      return;\n    }\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const data = await searchMovies(searchValue);\n        if (data === 0) {\n          return;\n        }\n        setMovies(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [searchValue]);\n\n  const onInputSearch = value => {\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <main>\n      <SearchForm onSubmit={onInputSearch} />\n      {isLoading && <Loader />}\n      {movies && <MovieList movies={movies} />}\n      {error &&\n        Notiflix.Notify.failure(\n          'Sorry, we did not find this movie. Please repeat the search'\n        )}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e58952305d798b0bf4a300c9b516b346';\n\nexport async function getTrendingMovies() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('getTrendingFilms error' + error);\n  }\n}\n\nexport async function searchMovies(query) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('searchMovies error' + error);\n  }\n}\n\nexport async function getMovieDetails(movie_id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movie_id}?api_key=${API_KEY}`\n    );\n    return await response.data;\n  } catch (error) {\n    console.error('getMovieDetails error', error);\n  }\n}\n\nexport async function getMovieCast(movie_id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movie_id}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error('getMovieCast error' + error);\n  }\n}\n\nexport async function getMovieReviews(movie_id) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('getMovieReviews error' + error);\n  }\n}\n"],"names":["movies","noPosterImg","noPoster","location","useLocation","className","css","map","poster_path","name","title","id","to","state","from","src","alt","onSubmit","useState","search","setSearch","e","preventDefault","trim","onChange","target","value","type","autoComplete","autoFocus","placeholder","size","setMovies","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","searchValue","get","useEffect","fetchData","searchMovies","data","query","Loader","MovieList","Notiflix","BASE_URL","API_KEY","getTrendingMovies","axios","response","results","console","getMovieDetails","movie_id","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}